package server

import (
	"log"

	"github.com/gin-gonic/gin"
)

func SetRouter(router *gin.Engine) {
	// 后台管理系统接口
	// 1.增加新用户，传入用户邮箱地址、用户名，返回userid、用户密码
	router.POST("/v1/api/user")
	// 2.通过邮箱、用户名、userId查询用户
	// 3.查询所有用户

	// 4.为用户添加APIKEY、SECRETKEY、交易费率，支持多个交易所
	// 5.查询用户所有APIKEY
	// 6.设置用户的APIKEY使用的策略和币种

	// 7.添加策略信息，策略类型、币种、策略参数
	// 8.查询所有策略信息
	// 9.修改策略参数
	// 10.删除策略

	// 11.启动单个用户的单个APIKEY的策略
	// 12.停止单个用户的单个APIKEY的策略

	// 13.启动某一策略的所有APIKEY
	// 14.停止某一策略的所有APIKEY
	// 15.将A策略的所有APIKEY迁移到B策略

	// 小程序接口
	// 1.登录，用户通过邮箱地址和密码登录
	// 2.修改密码，用户首次登录小程序需要修改密码
	// 3.查询用户资产信息，总资产、初始余额、当前余额、真实余额、当前收益
	// 4.查询用户收益数据，按天计算，返回最近一个月的数据，今日收益、今日最大回撤
	// 5.查询用户策略信息，策略类型、交易品种、当前收益、当前持仓、运行简要、当前挂单、运行状态
	// 6.查询用户交易记录
}

/*
1.启动单个用户的单个APIKEY的策略
2.停止单个用户的单个APIKEY的策略
3.启动某一策略的所有APIKEY
4.停止某一策略的所有APIKEY
5.将A策略的所有APIKEY迁移到B策略

6.节点挂掉，怎么重新启动挂掉节点上的策略
7.怎么监测到有节点挂掉，区分节点是正常退出还是异常退出
  7.1.心跳，谁去发心跳，策略记录在哪
  7.2.watch节点注册到etcd的key

调度服务将APIKEY绑定到一个策略服务并将绑定信息存到etcd,/scheduler/apikey --> {"node":"10.22.33.55:32154"}
策略服务启动时向etcd注册地址,/service/strategy/strategyName/10.22.33.55:32154 --> {"uptime":111111111, "available":true}


*/
