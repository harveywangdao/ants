syntax = "proto3";

package strategymanager;

service StrategyManager {
  rpc StartTask(StartTaskRequest) returns (StartTaskResponse) {}
  rpc StopTask(StopTaskRequest) returns (StopTaskResponse) {}
  rpc TaskCommandExec(TaskCommandExecRequest) returns (TaskCommandExecResponse) {}
}

message StartTaskRequest {
  string user_id = 1;
  string exchange = 2;
  string api_key = 3;
  string secret_key = 4;
  string passphrase = 5;
  string strategy_name = 6;
  string instrument_id = 7;
  string endpoint = 8;
  string ws_endpoint = 9;
  string params = 10;
}

message StartTaskResponse {

}

message StopTaskRequest {
  string user_id = 1;
  string exchange = 2;
  string api_key = 3;
  string strategy_name = 4;
  string instrument_id = 5;
}

message StopTaskResponse {

}

message TaskCommandExecRequest {
  string user_id = 1;
  string exchange = 2;
  string api_key = 3;
  string strategy_name = 4;
  string instrument_id = 5;
  string params = 6;
}

message TaskCommandExecResponse {

}
