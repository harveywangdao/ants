syntax = "proto3";

package strategymanager;

service StrategyManager {
  rpc StartStrategy(StartStrategyRequest) returns (StartStrategyResponse) {}
  rpc StopStrategy(StopStrategyRequest) returns (StopStrategyResponse) {}
  rpc StrategyExec(StrategyExecRequest) returns (StrategyExecResponse) {}
}

message StartStrategyRequest {
  string user_id = 1;
  string exchange = 2;
  string api_key = 3;
  string secret_key = 4;
  string passphrase = 5;
  string strategy_name = 6;
  string instrument_id = 7;
  string endpoint = 8;
  string ws_endpoint = 9;
  string params = 10;
}

message StartStrategyResponse {

}

message StopStrategyRequest {
  string user_id = 1;
  string exchange = 2;
  string api_key = 3;
  string strategy_name = 4;
  string instrument_id = 5;
}

message StopStrategyResponse {

}

message StrategyExecRequest {
  string user_id = 1;
  string exchange = 2;
  string api_key = 3;
  string strategy_name = 4;
  string instrument_id = 5;
  string params = 6;
}

message StrategyExecResponse {

}
